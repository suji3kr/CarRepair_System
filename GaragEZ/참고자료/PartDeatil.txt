// 기존내용 참고할 것

import React, { useState, useEffect } from "react";
import { useNavigate, useParams } from "react-router-dom"; // URL에서 상품 ID 가져오기
import { fetchPartById } from "../services/partService";
import Layout from "../components/Layout";
import { Skeleton } from "@mui/material"; // ✅ MUI Skeleton 추가
import styles from "../styles/PartDetail.module.css"; // ✅ 스타일 파일 적용

type Part = {
  id: number;
  name: string;
  category: string;
  price: number;
  stock: number;
};

const PartDetail: React.FC = () => {
    const navigate = useNavigate(); //경로이동
    const { id } = useParams<{ id: string }>(); // URL에서 상품 ID 가져오기
    const [part, setPart] = useState<Part | null>(null);
    const [quantity, setQuantity] = useState<number>(1);
    const [isLoading, setIsLoading] = useState<boolean>(true);

    useEffect(() => {
    if (id) {
      fetchPartById(Number(id)).then((data) => {
        setPart(data);
        setIsLoading(false);
      });
    }
  }, [id]);

  // ✅ 총 가격 계산
  const totalPrice = part ? (part.price * quantity).toFixed(2) : "0.00";

  // ✅ 수량 증가
  const increaseQuantity = () => {
    if (part && quantity < part.stock) setQuantity(quantity + 1);
  };

  // ✅ 수량 감소
  const decreaseQuantity = () => {
    if (quantity > 1) setQuantity(quantity - 1);
  };

  return (
    <Layout>
      <div className={styles.container}>
        {/* ✅ 상품 이미지 영역 */}
        <div className={styles.imageContainer}>
          {isLoading ? (
            <Skeleton variant="rectangular" width={400} height={300} />
          ) : (
            <img
              src={`https://picsum.photos/400/300?random=${part?.id}`}
              alt={part?.name}
            />
          )}
        </div>

        {/* ✅ 상품 정보 영역 */}
        <div className={styles.productInfo}>
          {isLoading ? (
            <>
              <Skeleton width="80%" height={30} />
              <Skeleton width="60%" height={20} />
              <Skeleton width="50%" height={20} />
              <Skeleton width="40%" height={20} />
            </>
          ) : (
            <>
              <h2>{part?.name}</h2>
              <p className={styles.category}>카테고리: {part?.category}</p>
              <p className={styles.stock}>재고: {part?.stock}개</p>
              <p className={styles.price}>
                가격: <strong>${part?.price.toFixed(2)}</strong>
              </p>
            </>
          )}

          {/* ✅ 수량 조절 */}
          <div className={styles.quantityContainer}>
            <button onClick={decreaseQuantity} disabled={quantity === 1}>-</button>
            <span>{quantity}</span>
            <button onClick={increaseQuantity} disabled={part?.stock === quantity}>+</button>
          </div>

          {/* ✅ 총 가격 */}
          <div className={styles.totalPriceContainer}>
            <span className={styles.totalLabel}>총 상품금액</span>
            {isLoading ? (
              <Skeleton width={80} height={30} />
            ) : (
              <span className={styles.totalPrice}>${totalPrice}</span>
            )}
          </div>

          {/* ✅ 버튼 영역 */}
          <div className={styles.buttonContainer}>
            {isLoading ? (
              <>
                <Skeleton width="40%" height={50} />
                <Skeleton width="40%" height={50} />
              </>
            ) : (
              <>
                <button className={styles.cartButton} onClick={() => (alert("장바구니 담기 성공★"), navigate("/cart"))}>장바구니</button>
                <button className={styles.buyButton} onClick={() => alert("결제가 진행됩니다.")}>
                  구매하기
                </button>
              </>
            )}
          </div>
        </div>
      </div>

      {/* ✅ 상세 정보 추가 (아래쪽 여백) */}
      <div className={styles.detailSection}>
        <h3>상품 상세 정보</h3>
        {isLoading ? (
          <Skeleton variant="rectangular" width="100%" height={150} />
        ) : (
          <p>여기에 상품의 상세 설명을 추가하세요.</p>
        )}
      </div>
    </Layout>
  );
};

export default PartDetail;
