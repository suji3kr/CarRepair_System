-- 🚗 차량 정비 시스템 데이터 베이스 삭제 및 재생성
SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS part_prices;
DROP TABLE IF EXISTS store;
DROP TABLE IF EXISTS repair_store;
DROP TABLE IF EXISTS maintenance_records;
DROP TABLE IF EXISTS approvals;
DROP TABLE IF EXISTS store_orders;
DROP TABLE IF EXISTS notifications;
DROP TABLE IF EXISTS setup_tracks;
DROP TABLE IF EXISTS appointments;
DROP TABLE IF EXISTS vehicles;
DROP TABLE IF EXISTS user_vehicles;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS parts;
DROP TABLE IF EXISTS admin;
DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS payments;
DROP TABLE IF EXISTS ai_product;
DROP TABLE IF EXISTS user_vehicles;
DROP TABLE IF EXISTS contact_messages;
DROP TABLE IF EXISTS car;


SET FOREIGN_KEY_CHECKS=1;

-- 👤 사용자 테이블
CREATE TABLE users (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id VARCHAR(50),
  name VARCHAR(100),
  email VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(255),
  phone VARCHAR(20),
  role ENUM('USER', 'ADMIN') DEFAULT 'USER' NOT NULL,
  co_owner BOOLEAN DEFAULT FALSE,
  co_owner_name VARCHAR(100) DEFAULT NULL,
  co_owner_phone VARCHAR(20) DEFAULT NULL,
  terms_agreed BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 🚘 차량 테이블
CREATE TABLE vehicles (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  owner_id BIGINT,
  make VARCHAR(100) NOT NULL,
  model VARCHAR(100) NOT NULL,
  year INT NOT NULL,
  vin VARCHAR(50) UNIQUE NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  car_number VARCHAR(20) UNIQUE NOT NULL,
  FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE
);


-- 회원이 차량을 여러 대 소유할 수 있도록 user_vehicles 테이블을 만들어 1:N 관계를 형성합니다.
-- 한 사용자가 여러 대의 차량을 등록할 수 있도록 다대다(M:N) 관계 해결
-- 차량이 삭제되면 자동으로 해당 사용자의 user_vehicles 데이터도 삭제됨.
CREATE TABLE user_vehicles (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT NOT NULL,
    vehicle_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id) ON DELETE CASCADE
);

-- 🏪 부품 판매점(파트샵) 테이블
CREATE TABLE parts (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(100) NOT NULL,
  category VARCHAR(100),
  price DECIMAL(10,2) NOT NULL,
  stock INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  image_url VARCHAR(255)  -- 부품 이미지 URL을 저장하는 필드 추가
);


-- 🏪 부품 판매점 테이블
CREATE TABLE store (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  part_id BIGINT,
  price DECIMAL(10,2) NOT NULL,
  stock INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (part_id) REFERENCES parts(id) ON DELETE CASCADE
);

-- 🛍 부품 주문 테이블
CREATE TABLE store_orders (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id BIGINT,
  part_id BIGINT,
  quantity INT NOT NULL,
  order_price DECIMAL(10,2) NOT NULL,
  total_price DECIMAL(10,2) NOT NULL,
  status ENUM('PENDING', 'SHIPPED', 'DELIVERED', 'CANCELLED', 'RETURNED') NOT NULL,
  order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (part_id) REFERENCES parts(id) ON DELETE CASCADE
);

-- 🛠 정비 예약 테이블
CREATE TABLE appointments (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id BIGINT,
  vehicle_id BIGINT,
  service_type VARCHAR(100) NOT NULL,
  status ENUM('예약', '진행중', '완료') NOT NULL,
  scheduled_date TIMESTAMP NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (vehicle_id) REFERENCES vehicles(id) ON DELETE CASCADE
);

-- 🛠 정비소 정보 테이블
CREATE TABLE repair_store (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  store_id BIGINT,
  appointment_id BIGINT,
  location VARCHAR(255) NOT NULL,
  contact_info VARCHAR(100),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (store_id) REFERENCES store(id) ON DELETE SET NULL,
  FOREIGN KEY (appointment_id) REFERENCES appointments(id) ON DELETE CASCADE
);

-- 📢 알림 테이블
CREATE TABLE notifications (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id BIGINT,
  message TEXT NOT NULL,
  status ENUM('읽음', '안읽음') NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- 📈 부품 가격 비교 테이블
CREATE TABLE part_prices (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  part_id BIGINT,
  store_id BIGINT,
  price DECIMAL(10,2) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (part_id) REFERENCES parts(id) ON DELETE CASCADE,
  FOREIGN KEY (store_id) REFERENCES store(id) ON DELETE CASCADE
);

-- 🎢 트랙 관리 테이블
CREATE TABLE setup_tracks (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(100) NOT NULL,
  description TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 🛠 관리자 승인 테이블
CREATE TABLE approvals (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id BIGINT,
  approval_type ENUM('예약', '결제', '주문 승인', '반품 승인') NOT NULL,
  status ENUM('승인', '거절') NOT NULL,
  order_id BIGINT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (order_id) REFERENCES store_orders(id) ON DELETE CASCADE
);

-- 🛠 정비 기록 테이블
CREATE TABLE maintenance_records (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  vehicle_id BIGINT,
  user_id BIGINT,
  appointment_id BIGINT,
  service_type VARCHAR(100) NOT NULL,
  description TEXT,
  service_date DATE NOT NULL,
  cost DECIMAL(10,2) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (vehicle_id) REFERENCES vehicles(id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (appointment_id) REFERENCES appointments(id) ON DELETE CASCADE
);

-- 📝 리뷰 테이블
CREATE TABLE reviews (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id BIGINT NOT NULL,
  content TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- 💰 결제 테이블
CREATE TABLE payments (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  order_id BIGINT NOT NULL,
  amount DECIMAL(10,2) NOT NULL,
  payment_method ENUM('CARD', 'CASH', 'ONLINE') NOT NULL,
  payment_status ENUM('PENDING', 'COMPLETED', 'FAILED') NOT NULL,
  payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (order_id) REFERENCES store_orders(id) ON DELETE CASCADE
);

-- 🤖 AI 크롤링된 상품 테이블
CREATE TABLE ai_product (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  price INT NOT NULL,
  image_url VARCHAR(500),
  link VARCHAR(500),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE contact_messages (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,              -- 문의자 이름
    car_type VARCHAR(100),                     -- 차량 종류 (옵션)
    model VARCHAR(100) NOT NULL,               -- 모델명
    email VARCHAR(100) NOT NULL,               -- 이메일 주소
    phone_number VARCHAR(20) NOT NULL,         -- 전화번호
    message TEXT NOT NULL,                     -- 문의 내용
    additional_notes TEXT,                     -- 추가 기재사항 (옵션)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  -- 작성일시
);


SET FOREIGN_KEY_CHECKS=1;
